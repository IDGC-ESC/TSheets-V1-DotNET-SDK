{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JobcodeFilter",
  "type": "object",
  "description": "Filter for narrowing down the results of a call to retrieve Jobcode entities.",
  "additionalProperties": false,
  "required": [
    "ids",
    "parent_ids",
    "name",
    "type",
    "active",
    "modified_before",
    "modified_since"
  ],
  "properties": {
    "ids": {
      "type": "string",
      "description": "Gets or sets the jobcode ids you'd like to filter on."
    },
    "parent_ids": {
      "type": "string",
      "description": "Gets or sets the jobcode parent ids you'd like to filter on."
    },
    "name": {
      "type": "string",
      "description": "Gets or sets the wildcard-able filter on the jobcode name."
    },
    "type": {
      "description": "Gets or sets the value for filtering by jobcode type, e.g. 'regular', 'PTO', etc.",
      "oneOf": [
        {
          "$ref": "#/definitions/JobcodeType"
        }
      ]
    },
    "active": {
      "description": "Gets or sets the value for filtering by active or inactive state, or both.",
      "oneOf": [
        {
          "$ref": "#/definitions/TristateChoice"
        }
      ]
    },
    "modified_before": {
      "type": "string",
      "description": "Gets or sets the filter for returning only those jobcodes modified before this date/time.",
      "format": "date-time"
    },
    "modified_since": {
      "type": "string",
      "description": "Gets or sets the filter for returning only those jobcodes modified after this date/time.",
      "format": "date-time"
    }
  },
  "definitions": {
    "JobcodeType": {
      "type": "string",
      "description": "The supported jobcode types.",
      "x-enumNames": [
        "Regular",
        "Pto",
        "UnpaidBreak",
        "PaidBreak",
        "UnpaidTimeOff",
        "All"
      ],
      "enum": [
        "regular",
        "pto",
        "unpaid_break",
        "paid_break",
        "unpaid_time_off",
        "all"
      ]
    },
    "TristateChoice": {
      "type": "string",
      "description": "A value for filtering results on 'yes', 'no', or 'both'.",
      "x-enumNames": [
        "Yes",
        "No",
        "Both"
      ],
      "enum": [
        "yes",
        "no",
        "both"
      ]
    }
  }
}